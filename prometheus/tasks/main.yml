---

- name: Add prometheus user
  user:
    name: prometheus
    system: true

- name: Make directories present
  file:
    dest: '{{ item }}'
    owner: prometheus
    group: prometheus
    state: directory
  with_items:
    - /etc/prometheus
    - /var/lib/prometheus

- name: Make /src directory present
  file:
    dest: /src
    state: directory

- name: Extract Promehteus Sources
  unarchive:
    remote_src: true
    dest: /src/
    src: '{{ prometheus_download_path }}'
    creates: '{{ prometheus_src_path }}'

- name: Copy Binaries
  copy:
    remote_src: true
    src: '{{ prometheus_src_path }}/{{ item }}'
    dest: /usr/bin/{{ item }}
    mode: 0755
  with_items:
    - tsdb
    - prometheus
    - promtool
  notify: Restart Prometheus

- name: Copy console to config directory
  copy:
    remote_src: true
    src: '{{ prometheus_src_path }}/{{ item }}'
    dest: /etc/prometheus/{{ item }}
    owner: prometheus
    group: prometheus
  with_items:
    - consoles
    - console_libraries
  notify: Restart Prometheus

- name: Copy service file
  copy:
    src: prometheus.service
    dest: /etc/systemd/system/prometheus.service
  notify: Restart Prometheus

- name: Copy config
  template:
    src: '{{ prometheus_config }}'
    dest: /etc/prometheus/prometheus.yml
    owner: prometheus
    group: prometheus
    mode: 0600
  notify: Restart Prometheus

- name: Copy rules
  template:
    src: '{{ prometheus_rules_config }}'
    dest: /etc/prometheus/rules.yml
    owner: prometheus
    group: prometheus
    mode: 0600
  notify: Restart Prometheus
  when: prometheus_rules_config is defined

- name: Enable and start Prometheus
  service:
    name: prometheus
    state: started
    enabled: true

- name: Create htpasswd
  htpasswd:
    path: /etc/nginx/prometheus.htpasswd
    name: '{{ prometheus_auth_user }}'
    password: '{{ prometheus_auth_password }}'
  notify: Reload nginx
  when: prometheus_auth_user is defined and prometheus_auth_password is defined

- name: Create htpasswd
  htpasswd:
    path: /etc/nginx/prometheus.htpasswd
    name: '{{ prometheus_auth_user }}'
    password: '{{ prometheus_auth_password }}'
  notify: Reload nginx
  when: prometheus_auth_user is defined and prometheus_auth_password is defined

- name: Serve prometheus via nginx
  template:
    src: nginx.conf.j2
    dest: /etc/nginx/conf.d/{{ prometheus_domain }}.conf
  notify: Reload nginx
  when: prometheus_domain is defined
